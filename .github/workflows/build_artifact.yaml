name: Build Artifact
run-name: "Build Artifact for ${{ github.event.inputs.component }}"

on:
  workflow_dispatch:
    inputs:
      component:
        description: "Select component"
        required: true
        type: choice
        options:
          - piggy-ui
          - piggy-api
          - piggy-db
      component_type:
        description: "Select component type"
        required: true
        type: choice
        options:
          - angular
          - .net
          - sql-dacpac
      release_type:
        description: Release type
        required: true
        type: choice
        options: [patch, minor, major]
      is_pre_release:
        description: "Is this a pre-release?"
        required: false
        type: boolean
      should_update_version_json:
        description: "Should update version.json?"
        required: false
        type: boolean

jobs:
  angular-build:
    if: ${{ github.event.inputs.component_type == 'angular' }}
    runs-on: ubuntu-latest
    environment: "ci-angular"
    outputs:
      version: ${{ steps.angular_build_action.outputs.VERSION }}
    steps:
      - name: Angular Build Action
        id: angular_build_action
        uses: ./.github/actions/angular
        with:
          component: ${{ github.event.inputs.component }}
          repo_owner: ${{ vars.REPO_OWNER }}
          personal_access_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          release_type: ${{ github.event.inputs.release_type }}
          is_pre_release: ${{ github.event.inputs.is_pre_release }}
          should_update_version_json: ${{ github.event.inputs.should_update_version_json }}

  log-build-output:
    needs:
      - angular-build
      - dotnet-build
      - sql-dacpac-build
    runs-on: ubuntu-latest
    steps:
      - name: Log Angular Build Output
        if: ${{ always() && needs.angular-build.result == 'success' }}
        run: |
          echo "Angular build version: ${{ needs.angular-build.outputs.version }}"
      - name: Log .NET Build Output
        if: ${{ always() && needs.dotnet-build.result == 'success' }}
        run: |
          echo "Dotnet build completed for: ${{ github.event.inputs.component }}"
      - name: Log SQL DACPAC Build Output
        if: ${{ always() && needs.sql-dacpac-build.result == 'success' }}
        run: |
          echo "SQL DACPAC build completed for: ${{ github.event.inputs.component }}"

  dotnet-build:
    if: ${{ github.event.inputs.component_type == '.net' }}
    runs-on: windows-latest
    environment: "ci-dotnet"
    steps:
      - name: Placeholder for .NET build
        run: |
          echo "Build logic for .NET component: ${{ github.event.inputs.component }}"

  sql-dacpac-build:
    if: ${{ github.event.inputs.component_type == 'sql-dacpac' }}
    runs-on: windows-latest
    environment: "ci-sql-dacpac"
    steps:
      - name: Placeholder for SQL DACPAC build
        run: |
          echo "Build logic for SQL DACPAC component: ${{ github.event.inputs.component }}"
